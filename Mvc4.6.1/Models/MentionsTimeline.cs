using System;
using System.Collections.Generic;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var mentionsTimeline = MentionsTimeline.FromJson(jsonString);

//namespace MvcDemo.Models
//{

//    public partial class MentionsTimeline
//    {
//        [JsonProperty("Type")]
//        public long Type { get; set; }

//        [JsonProperty("SourceUserID")]
//        public long SourceUserId { get; set; }

//        [JsonProperty("SourceScreenName")]
//        public object SourceScreenName { get; set; }

//        [JsonProperty("TargetUserID")]
//        public long TargetUserId { get; set; }

//        [JsonProperty("TargetScreenName")]
//        public object TargetScreenName { get; set; }

//        [JsonProperty("Cursor")]
//        public long Cursor { get; set; }

//        [JsonProperty("ScreenName")]
//        public string ScreenName { get; set; }

//        [JsonProperty("UserID")]
//        public object UserId { get; set; }

//        [JsonProperty("SkipStatus")]
//        public bool SkipStatus { get; set; }

//        [JsonProperty("IncludeEntities")]
//        public bool IncludeEntities { get; set; }

//        [JsonProperty("IncludeUserEntities")]
//        public bool IncludeUserEntities { get; set; }

//        [JsonProperty("Count")]
//        public long Count { get; set; }

//        [JsonProperty("Friend")]
//        public object Friend { get; set; }

//        [JsonProperty("SourceRelationship")]
//        public object SourceRelationship { get; set; }

//        [JsonProperty("TargetRelationship")]
//        public object TargetRelationship { get; set; }

//        [JsonProperty("IDInfo")]
//        public object IdInfo { get; set; }

//        [JsonProperty("Relationships")]
//        public object Relationships { get; set; }

//        [JsonProperty("CursorMovement")]
//        public CursorMovement CursorMovement { get; set; }

//        [JsonProperty("Users")]
//        public User[] Users { get; set; }
//    }

//    public partial class CursorMovement
//    {
//        [JsonProperty("Next")]
//        public double Next { get; set; }

//        [JsonProperty("Previous")]
//        public long Previous { get; set; }
//    }

//    public partial class Status
//    {
//        [JsonProperty("Type")]
//        public long Type { get; set; }

//        [JsonProperty("ID")]
//        public long Id { get; set; }

//        [JsonProperty("UserID")]
//        public long UserId { get; set; }

//        [JsonProperty("ScreenName")]
//        public object ScreenName { get; set; }

//        [JsonProperty("SinceID")]
//        public long SinceId { get; set; }

//        [JsonProperty("MaxID")]
//        public long MaxId { get; set; }

//        [JsonProperty("Count")]
//        public long Count { get; set; }

//        [JsonProperty("Cursor")]
//        public long Cursor { get; set; }

//        [JsonProperty("IncludeRetweets")]
//        public bool IncludeRetweets { get; set; }

//        [JsonProperty("ExcludeReplies")]
//        public bool ExcludeReplies { get; set; }

//        [JsonProperty("IncludeEntities")]
//        public bool IncludeEntities { get; set; }

//        [JsonProperty("IncludeUserEntities")]
//        public bool IncludeUserEntities { get; set; }

//        [JsonProperty("IncludeMyRetweet")]
//        public bool IncludeMyRetweet { get; set; }

//        [JsonProperty("IncludeAltText")]
//        public bool IncludeAltText { get; set; }

//        [JsonProperty("OEmbedUrl")]
//        public object OEmbedUrl { get; set; }

//        [JsonProperty("OEmbedMaxWidth")]
//        public long OEmbedMaxWidth { get; set; }

//        [JsonProperty("OEmbedHideMedia")]
//        public bool OEmbedHideMedia { get; set; }

//        [JsonProperty("OEmbedHideThread")]
//        public bool OEmbedHideThread { get; set; }

//        [JsonProperty("OEmbedOmitScript")]
//        public bool OEmbedOmitScript { get; set; }

//        [JsonProperty("OEmbedAlign")]
//        public long OEmbedAlign { get; set; }

//        [JsonProperty("OEmbedRelated")]
//        public object OEmbedRelated { get; set; }

//        [JsonProperty("OEmbedLanguage")]
//        public object OEmbedLanguage { get; set; }

//        [JsonProperty("CreatedAt")]
//        public DateTimeOffset CreatedAt { get; set; }

//        [JsonProperty("StatusID")]
//        public ulong StatusId { get; set; }

//        [JsonProperty("Text")]
//        public string Text { get; set; }

//        [JsonProperty("FullText")]
//        public object FullText { get; set; }

//        [JsonProperty("ExtendedTweet")]
//        public Status ExtendedTweet { get; set; }

//        [JsonProperty("Source")]
//        public string Source { get; set; }

//        [JsonProperty("Truncated")]
//        public bool Truncated { get; set; }

//        [JsonProperty("DisplayTextRange")]
//        public object DisplayTextRange { get; set; }

//        [JsonProperty("TweetMode")]
//        public long TweetMode { get; set; }

//        [JsonProperty("InReplyToStatusID")]
//        public double InReplyToStatusId { get; set; }

//        [JsonProperty("InReplyToUserID")]
//        public double InReplyToUserId { get; set; }

//        [JsonProperty("FavoriteCount")]
//        public long? FavoriteCount { get; set; }

//        [JsonProperty("Favorited")]
//        public bool Favorited { get; set; }

//        [JsonProperty("InReplyToScreenName")]
//        public string InReplyToScreenName { get; set; }

//        [JsonProperty("User")]
//        public User User { get; set; }

//        [JsonProperty("Users")]
//        public object[] Users { get; set; }

//        [JsonProperty("Contributors")]
//        public object[] Contributors { get; set; }

//        [JsonProperty("Coordinates")]
//        public Coordinate Coordinates { get; set; }

//        [JsonProperty("Place")]
//        public Place Place { get; set; }

//        [JsonProperty("Annotation")]
//        public Annotation Annotation { get; set; }

//        [JsonProperty("Entities")]
//        public Entities Entities { get; set; }

//        [JsonProperty("ExtendedEntities")]
//        public Entities ExtendedEntities { get; set; }

//        [JsonProperty("TrimUser")]
//        public bool TrimUser { get; set; }

//        [JsonProperty("IncludeContributorDetails")]
//        public bool IncludeContributorDetails { get; set; }

//        [JsonProperty("RetweetCount")]
//        public long RetweetCount { get; set; }

//        [JsonProperty("Retweeted")]
//        public bool Retweeted { get; set; }

//        [JsonProperty("PossiblySensitive")]
//        public bool PossiblySensitive { get; set; }

//        [JsonProperty("RetweetedStatus")]
//        public Status RetweetedStatus { get; set; }

//        [JsonProperty("CurrentUserRetweet")]
//        public long CurrentUserRetweet { get; set; }

//        [JsonProperty("IsQuotedStatus")]
//        public bool IsQuotedStatus { get; set; }

//        [JsonProperty("QuotedStatusID")]
//        public double QuotedStatusId { get; set; }

//        [JsonProperty("QuotedStatus")]
//        public Status QuotedStatus { get; set; }

//        [JsonProperty("Scopes")]
//        public Scopes Scopes { get; set; }

//        [JsonProperty("WithheldCopyright")]
//        public bool WithheldCopyright { get; set; }

//        [JsonProperty("WithheldInCountries")]
//        public object[] WithheldInCountries { get; set; }

//        [JsonProperty("WithheldScope")]
//        public object WithheldScope { get; set; }

//        [JsonProperty("MetaData")]
//        public MetaData MetaData { get; set; }

//        [JsonProperty("Lang")]
//        public Lang? Lang { get; set; }

//        [JsonProperty("Map")]
//        public bool Map { get; set; }

//        [JsonProperty("TweetIDs")]
//        public object TweetIDs { get; set; }

//        [JsonProperty("FilterLevel")]
//        public long FilterLevel { get; set; }

//        [JsonProperty("EmbeddedStatus")]
//        public object EmbeddedStatus { get; set; }

//        [JsonProperty("CursorMovement")]
//        public object CursorMovement { get; set; }
//    }

//    public partial class User
//    {
//        [JsonProperty("Type")]
//        public long Type { get; set; }

//        [JsonProperty("UserID")]
//        public long UserId { get; set; }

//        [JsonProperty("UserIdList")]
//        public object UserIdList { get; set; }

//        [JsonProperty("ScreenName")]
//        public object ScreenName { get; set; }

//        [JsonProperty("ScreenNameList")]
//        public object ScreenNameList { get; set; }

//        [JsonProperty("Page")]
//        public long Page { get; set; }

//        [JsonProperty("Count")]
//        public long Count { get; set; }

//        [JsonProperty("Cursor")]
//        public long Cursor { get; set; }

//        [JsonProperty("Slug")]
//        public object Slug { get; set; }

//        [JsonProperty("Query")]
//        public object Query { get; set; }

//        [JsonProperty("IncludeEntities")]
//        public bool IncludeEntities { get; set; }

//        [JsonProperty("SkipStatus")]
//        public bool SkipStatus { get; set; }

//        [JsonProperty("UserIDResponse")]
//        public string UserIdResponse { get; set; }

//        [JsonProperty("ScreenNameResponse")]
//        public string ScreenNameResponse { get; set; }

//        [JsonProperty("ImageSize")]
//        public long ImageSize { get; set; }

//        [JsonProperty("CursorMovement")]
//        public CursorMovement CursorMovement { get; set; }

//        [JsonProperty("Name")]
//        public string Name { get; set; }

//        [JsonProperty("Location")]
//        public string Location { get; set; }

//        [JsonProperty("Description")]
//        public string Description { get; set; }

//        [JsonProperty("ProfileImageUrl")]
//        public Uri ProfileImageUrl { get; set; }

//        [JsonProperty("ProfileImageUrlHttps")]
//        public Uri ProfileImageUrlHttps { get; set; }

//        [JsonProperty("DefaultProfileImage")]
//        public bool DefaultProfileImage { get; set; }

//        [JsonProperty("Url")]
//        public Uri Url { get; set; }

//        [JsonProperty("DefaultProfile")]
//        public bool DefaultProfile { get; set; }

//        [JsonProperty("Protected")]
//        public bool Protected { get; set; }

//        [JsonProperty("FollowersCount")]
//        public long FollowersCount { get; set; }

//        [JsonProperty("ProfileBackgroundColor")]
//        public ProfileColor? ProfileBackgroundColor { get; set; }

//        [JsonProperty("ProfileTextColor")]
//        public ProfileTextColor ProfileTextColor { get; set; }

//        [JsonProperty("ProfileLinkColor")]
//        public string ProfileLinkColor { get; set; }

//        [JsonProperty("ProfileSidebarFillColor")]
//        public ProfileSidebarFillColor? ProfileSidebarFillColor { get; set; }

//        [JsonProperty("ProfileSidebarBorderColor")]
//        public ProfileSidebarBorderColor? ProfileSidebarBorderColor { get; set; }

//        [JsonProperty("FriendsCount")]
//        public long FriendsCount { get; set; }

//        [JsonProperty("CreatedAt")]
//        public DateTimeOffset CreatedAt { get; set; }

//        [JsonProperty("FavoritesCount")]
//        public long FavoritesCount { get; set; }

//        [JsonProperty("UtcOffset")]
//        public long UtcOffset { get; set; }

//        [JsonProperty("TimeZone")]
//        public object TimeZone { get; set; }

//        [JsonProperty("ProfileBackgroundImageUrl")]
//        public Uri ProfileBackgroundImageUrl { get; set; }

//        [JsonProperty("ProfileBackgroundImageUrlHttps")]
//        public Uri ProfileBackgroundImageUrlHttps { get; set; }

//        [JsonProperty("ProfileBackgroundTile")]
//        public bool ProfileBackgroundTile { get; set; }

//        [JsonProperty("ProfileUseBackgroundImage")]
//        public bool ProfileUseBackgroundImage { get; set; }

//        [JsonProperty("StatusesCount")]
//        public long StatusesCount { get; set; }

//        [JsonProperty("Notifications")]
//        public bool Notifications { get; set; }

//        [JsonProperty("GeoEnabled")]
//        public bool GeoEnabled { get; set; }

//        [JsonProperty("Verified")]
//        public bool Verified { get; set; }

//        [JsonProperty("ContributorsEnabled")]
//        public bool ContributorsEnabled { get; set; }

//        [JsonProperty("IsTranslator")]
//        public bool IsTranslator { get; set; }

//        [JsonProperty("Following")]
//        public bool Following { get; set; }

//        [JsonProperty("Status")]
//        public Status Status { get; set; }

//        [JsonProperty("Categories")]
//        public object[] Categories { get; set; }

//        [JsonProperty("Lang")]
//        public object Lang { get; set; }

//        [JsonProperty("LangResponse")]
//        public Lang? LangResponse { get; set; }

//        [JsonProperty("ShowAllInlineMedia")]
//        public bool ShowAllInlineMedia { get; set; }

//        [JsonProperty("ListedCount")]
//        public long ListedCount { get; set; }

//        [JsonProperty("FollowRequestSent")]
//        public bool FollowRequestSent { get; set; }

//        [JsonProperty("ProfileImage")]
//        public object ProfileImage { get; set; }

//        [JsonProperty("ProfileBannerUrl")]
//        public Uri ProfileBannerUrl { get; set; }

//        [JsonProperty("BannerSizes")]
//        public object[] BannerSizes { get; set; }

//        [JsonProperty("Email")]
//        public object Email { get; set; }
//    }

//    public partial class Annotation
//    {
//        [JsonProperty("Type")]
//        public object Type { get; set; }

//        [JsonProperty("Attributes")]
//        public Scopes Attributes { get; set; }

//        [JsonProperty("Elements")]
//        public Scopes Elements { get; set; }
//    }

//    public partial class Scopes
//    {
//    }

//    public partial class Coordinate
//    {
//        [JsonProperty("Type")]
//        public object Type { get; set; }

//        [JsonProperty("Latitude")]
//        public double Latitude { get; set; }

//        [JsonProperty("Longitude")]
//        public double Longitude { get; set; }

//        [JsonProperty("IsLocationAvailable")]
//        public bool IsLocationAvailable { get; set; }
//    }

//    public partial class Entities
//    {
//        [JsonProperty("user_mentions")]
//        public UserMention[] UserMentions { get; set; }

//        [JsonProperty("urls")]
//        public Url[] Urls { get; set; }

//        [JsonProperty("hashtags")]
//        public object[] Hashtags { get; set; }

//        [JsonProperty("MediaEntities")]
//        public MediaEntity[] MediaEntities { get; set; }

//        [JsonProperty("symbols")]
//        public object[] Symbols { get; set; }
//    }

//    public partial class MediaEntity
//    {
//        [JsonProperty("ID")]
//        public double Id { get; set; }

//        [JsonProperty("MediaUrl")]
//        public Uri MediaUrl { get; set; }

//        [JsonProperty("AltText")]
//        public object AltText { get; set; }

//        [JsonProperty("MediaUrlHttps")]
//        public Uri MediaUrlHttps { get; set; }

//        [JsonProperty("Sizes")]
//        public Size[] Sizes { get; set; }

//        [JsonProperty("Type")]
//        public string Type { get; set; }

//        [JsonProperty("Indices")]
//        public long[] Indices { get; set; }

//        [JsonProperty("indices")]
//        public object MediaEntityIndices { get; set; }

//        [JsonProperty("VideoInfo")]
//        public VideoInfo VideoInfo { get; set; }

//        [JsonProperty("url")]
//        public Uri Url { get; set; }

//        [JsonProperty("display_url")]
//        public string DisplayUrl { get; set; }

//        [JsonProperty("expanded_url")]
//        public Uri ExpandedUrl { get; set; }

//        [JsonProperty("Start")]
//        public long Start { get; set; }

//        [JsonProperty("End")]
//        public long End { get; set; }
//    }

//    public partial class Size
//    {
//        [JsonProperty("Type")]
//        public TypeEnum Type { get; set; }

//        [JsonProperty("Width")]
//        public long Width { get; set; }

//        [JsonProperty("Height")]
//        public long Height { get; set; }

//        [JsonProperty("Resize")]
//        public Resize Resize { get; set; }
//    }

//    public partial class VideoInfo
//    {
//        [JsonProperty("AspectRatio")]
//        public AspectRatio AspectRatio { get; set; }

//        [JsonProperty("Duration")]
//        public long Duration { get; set; }

//        [JsonProperty("Variants")]
//        public Variant[] Variants { get; set; }
//    }

//    public partial class AspectRatio
//    {
//        [JsonProperty("Width")]
//        public long Width { get; set; }

//        [JsonProperty("Height")]
//        public long Height { get; set; }
//    }

//    public partial class Variant
//    {
//        [JsonProperty("BitRate")]
//        public long BitRate { get; set; }

//        [JsonProperty("ContentType")]
//        public string ContentType { get; set; }

//        [JsonProperty("Url")]
//        public Uri Url { get; set; }
//    }

//    public partial class Url
//    {
//        [JsonProperty("url")]
//        public Uri UrlUrl { get; set; }

//        [JsonProperty("display_url")]
//        public string DisplayUrl { get; set; }

//        [JsonProperty("expanded_url")]
//        public Uri ExpandedUrl { get; set; }

//        [JsonProperty("indices")]
//        public object Indices { get; set; }

//        [JsonProperty("Start")]
//        public long Start { get; set; }

//        [JsonProperty("End")]
//        public long End { get; set; }
//    }

//    public partial class UserMention
//    {
//        [JsonProperty("id")]
//        public double Id { get; set; }

//        [JsonProperty("screen_name")]
//        public string ScreenName { get; set; }

//        [JsonProperty("name")]
//        public string Name { get; set; }

//        [JsonProperty("id_str")]
//        public object IdStr { get; set; }

//        [JsonProperty("indices")]
//        public object Indices { get; set; }

//        [JsonProperty("Start")]
//        public long Start { get; set; }

//        [JsonProperty("End")]
//        public long End { get; set; }
//    }

//    public partial class MetaData
//    {
//        [JsonProperty("ResultType")]
//        public object ResultType { get; set; }

//        [JsonProperty("IsoLanguageCode")]
//        public object IsoLanguageCode { get; set; }
//    }

//    public partial class Place
//    {
//        [JsonProperty("Name")]
//        public string Name { get; set; }

//        [JsonProperty("CountryCode")]
//        public string CountryCode { get; set; }

//        [JsonProperty("ID")]
//        public string Id { get; set; }

//        [JsonProperty("Country")]
//        public string Country { get; set; }

//        [JsonProperty("PlaceType")]
//        public string PlaceType { get; set; }

//        [JsonProperty("Url")]
//        public Uri Url { get; set; }

//        [JsonProperty("FullName")]
//        public string FullName { get; set; }

//        [JsonProperty("Attributes")]
//        public Scopes Attributes { get; set; }

//        [JsonProperty("BoundingBox")]
//        public BoundingBox BoundingBox { get; set; }

//        [JsonProperty("Geometry")]
//        public BoundingBox Geometry { get; set; }

//        [JsonProperty("PolyLines")]
//        public object[] PolyLines { get; set; }

//        [JsonProperty("ContainedWithin")]
//        public object ContainedWithin { get; set; }
//    }

//    public partial class BoundingBox
//    {
//        [JsonProperty("Type")]
//        public string Type { get; set; }

//        [JsonProperty("Coordinates")]
//        public Coordinate[] Coordinates { get; set; }
//    }

//    public enum Resize { Crop, Fit };

//    public enum TypeEnum { Large, Medium, Small, Thumb };

//    public enum Lang { Ar, En, Pt, Tr, Und };

//    public enum ProfileColor { Acded6, C0Deed, F5F8Fa, The000000 };

//    public enum ProfileSidebarBorderColor { C0Deed, Eeeeee, The000000 };

//    public enum ProfileSidebarFillColor { Ddeef6, F6F6F6, The000000 };

//    public partial struct ProfileTextColor
//    {
//        public ProfileColor? Enum;
//        public long? Integer;

//        public static implicit operator ProfileTextColor(ProfileColor Enum) => new ProfileTextColor { Enum = Enum };
//        public static implicit operator ProfileTextColor(long Integer) => new ProfileTextColor { Integer = Integer };
//        public bool IsNull => Integer == null && Enum == null;
//    }

//    public partial class MentionsTimeline
//    {
//        public static MentionsTimeline FromJson(string json) => JsonConvert.DeserializeObject<MentionsTimeline>(json, Converter.Settings);
//    }

//    public static class Serialize
//    {
//        public static string ToJson(this MentionsTimeline self) => JsonConvert.SerializeObject(self, Converter.Settings);
//    }

//    internal static class Converter
//    {
//        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
//        {
//            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
//            DateParseHandling = DateParseHandling.None,
//            Converters =
//            {
//                LangConverter.Singleton,
//                ProfileColorConverter.Singleton,
//                ProfileSidebarBorderColorConverter.Singleton,
//                ProfileSidebarFillColorConverter.Singleton,
//                ProfileTextColorConverter.Singleton,
//                ResizeConverter.Singleton,
//                TypeEnumConverter.Singleton,
//                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
//            },
//        };
//    }

//    internal class LangConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(Lang) || t == typeof(Lang?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            switch (value)
//            {
//                case "ar":
//                    return Lang.Ar;
//                case "en":
//                    return Lang.En;
//                case "pt":
//                    return Lang.Pt;
//                case "tr":
//                    return Lang.Tr;
//                case "und":
//                    return Lang.Und;
//            }
//            throw new Exception("Cannot unmarshal type Lang");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (Lang)untypedValue;
//            switch (value)
//            {
//                case Lang.Ar:
//                    serializer.Serialize(writer, "ar");
//                    return;
//                case Lang.En:
//                    serializer.Serialize(writer, "en");
//                    return;
//                case Lang.Pt:
//                    serializer.Serialize(writer, "pt");
//                    return;
//                case Lang.Tr:
//                    serializer.Serialize(writer, "tr");
//                    return;
//                case Lang.Und:
//                    serializer.Serialize(writer, "und");
//                    return;
//            }
//            throw new Exception("Cannot marshal type Lang");
//        }

//        public static readonly LangConverter Singleton = new LangConverter();
//    }

//    internal class ProfileColorConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(ProfileColor) || t == typeof(ProfileColor?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            switch (value)
//            {
//                case "000000":
//                    return ProfileColor.The000000;
//                case "ACDED6":
//                    return ProfileColor.Acded6;
//                case "C0DEED":
//                    return ProfileColor.C0Deed;
//                case "F5F8FA":
//                    return ProfileColor.F5F8Fa;
//            }
//            throw new Exception("Cannot unmarshal type ProfileColor");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (ProfileColor)untypedValue;
//            switch (value)
//            {
//                case ProfileColor.The000000:
//                    serializer.Serialize(writer, "000000");
//                    return;
//                case ProfileColor.Acded6:
//                    serializer.Serialize(writer, "ACDED6");
//                    return;
//                case ProfileColor.C0Deed:
//                    serializer.Serialize(writer, "C0DEED");
//                    return;
//                case ProfileColor.F5F8Fa:
//                    serializer.Serialize(writer, "F5F8FA");
//                    return;
//            }
//            throw new Exception("Cannot marshal type ProfileColor");
//        }

//        public static readonly ProfileColorConverter Singleton = new ProfileColorConverter();
//    }

//    internal class ProfileSidebarBorderColorConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(ProfileSidebarBorderColor) || t == typeof(ProfileSidebarBorderColor?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            switch (value)
//            {
//                case "000000":
//                    return ProfileSidebarBorderColor.The000000;
//                case "C0DEED":
//                    return ProfileSidebarBorderColor.C0Deed;
//                case "EEEEEE":
//                    return ProfileSidebarBorderColor.Eeeeee;
//            }
//            throw new Exception("Cannot unmarshal type ProfileSidebarBorderColor");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (ProfileSidebarBorderColor)untypedValue;
//            switch (value)
//            {
//                case ProfileSidebarBorderColor.The000000:
//                    serializer.Serialize(writer, "000000");
//                    return;
//                case ProfileSidebarBorderColor.C0Deed:
//                    serializer.Serialize(writer, "C0DEED");
//                    return;
//                case ProfileSidebarBorderColor.Eeeeee:
//                    serializer.Serialize(writer, "EEEEEE");
//                    return;
//            }
//            throw new Exception("Cannot marshal type ProfileSidebarBorderColor");
//        }

//        public static readonly ProfileSidebarBorderColorConverter Singleton = new ProfileSidebarBorderColorConverter();
//    }

//    internal class ProfileSidebarFillColorConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(ProfileSidebarFillColor) || t == typeof(ProfileSidebarFillColor?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            switch (value)
//            {
//                case "000000":
//                    return ProfileSidebarFillColor.The000000;
//                case "DDEEF6":
//                    return ProfileSidebarFillColor.Ddeef6;
//                case "F6F6F6":
//                    return ProfileSidebarFillColor.F6F6F6;
//            }
//            throw new Exception("Cannot unmarshal type ProfileSidebarFillColor");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (ProfileSidebarFillColor)untypedValue;
//            switch (value)
//            {
//                case ProfileSidebarFillColor.The000000:
//                    serializer.Serialize(writer, "000000");
//                    return;
//                case ProfileSidebarFillColor.Ddeef6:
//                    serializer.Serialize(writer, "DDEEF6");
//                    return;
//                case ProfileSidebarFillColor.F6F6F6:
//                    serializer.Serialize(writer, "F6F6F6");
//                    return;
//            }
//            throw new Exception("Cannot marshal type ProfileSidebarFillColor");
//        }

//        public static readonly ProfileSidebarFillColorConverter Singleton = new ProfileSidebarFillColorConverter();
//    }

//    internal class ProfileTextColorConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(ProfileTextColor) || t == typeof(ProfileTextColor?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            switch (reader.TokenType)
//            {
//                case JsonToken.Null:
//                    return new ProfileTextColor { };
//                case JsonToken.String:
//                case JsonToken.Date:
//                    var stringValue = serializer.Deserialize<string>(reader);
//                    switch (stringValue)
//                    {
//                        case "000000":
//                            return new ProfileTextColor { Enum = ProfileColor.The000000 };
//                        case "ACDED6":
//                            return new ProfileTextColor { Enum = ProfileColor.Acded6 };
//                        case "C0DEED":
//                            return new ProfileTextColor { Enum = ProfileColor.C0Deed };
//                        case "F5F8FA":
//                            return new ProfileTextColor { Enum = ProfileColor.F5F8Fa };
//                    }
//                    long l;
//                    if (Int64.TryParse(stringValue, out l))
//                    {
//                        return new ProfileTextColor { Integer = l };
//                    }
//                    break;
//            }
//            throw new Exception("Cannot unmarshal type ProfileTextColor");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            var value = (ProfileTextColor)untypedValue;
//            if (value.IsNull)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            if (value.Enum != null)
//            {
//                switch (value.Enum)
//                {
//                    case ProfileColor.The000000:
//                        serializer.Serialize(writer, "000000");
//                        return;
//                    case ProfileColor.Acded6:
//                        serializer.Serialize(writer, "ACDED6");
//                        return;
//                    case ProfileColor.C0Deed:
//                        serializer.Serialize(writer, "C0DEED");
//                        return;
//                    case ProfileColor.F5F8Fa:
//                        serializer.Serialize(writer, "F5F8FA");
//                        return;
//                }
//            }
//            if (value.Integer != null)
//            {
//                serializer.Serialize(writer, value.Integer.Value.ToString());
//                return;
//            }
//            throw new Exception("Cannot marshal type ProfileTextColor");
//        }

//        public static readonly ProfileTextColorConverter Singleton = new ProfileTextColorConverter();
//    }

//    internal class ResizeConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(Resize) || t == typeof(Resize?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            switch (value)
//            {
//                case "crop":
//                    return Resize.Crop;
//                case "fit":
//                    return Resize.Fit;
//            }
//            throw new Exception("Cannot unmarshal type Resize");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (Resize)untypedValue;
//            switch (value)
//            {
//                case Resize.Crop:
//                    serializer.Serialize(writer, "crop");
//                    return;
//                case Resize.Fit:
//                    serializer.Serialize(writer, "fit");
//                    return;
//            }
//            throw new Exception("Cannot marshal type Resize");
//        }

//        public static readonly ResizeConverter Singleton = new ResizeConverter();
//    }

//    internal class TypeEnumConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(TypeEnum) || t == typeof(TypeEnum?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            switch (value)
//            {
//                case "large":
//                    return TypeEnum.Large;
//                case "medium":
//                    return TypeEnum.Medium;
//                case "small":
//                    return TypeEnum.Small;
//                case "thumb":
//                    return TypeEnum.Thumb;
//            }
//            throw new Exception("Cannot unmarshal type TypeEnum");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (TypeEnum)untypedValue;
//            switch (value)
//            {
//                case TypeEnum.Large:
//                    serializer.Serialize(writer, "large");
//                    return;
//                case TypeEnum.Medium:
//                    serializer.Serialize(writer, "medium");
//                    return;
//                case TypeEnum.Small:
//                    serializer.Serialize(writer, "small");
//                    return;
//                case TypeEnum.Thumb:
//                    serializer.Serialize(writer, "thumb");
//                    return;
//            }
//            throw new Exception("Cannot marshal type TypeEnum");
//        }

//        public static readonly TypeEnumConverter Singleton = new TypeEnumConverter();
//    }
//}
